{
  "swagger": "2.0",
  "info": {
    "version": "0.0.1",
    "title": "PSP"
  },
  "basePath": "/api/",
  "tags": [
    {
      "name": "Users",
      "description": "Operations related to Users API"
    },
    {
      "name": "Auth",
      "description": "Operations related to Auth API"
    },
    {
      "name": "Transactions",
      "description": "Operations related to Transactions API"
    },
    {
      "name": "Balance",
      "description": "Operations related to Balance API"
    },
    {
      "name": "Payable",
      "description": "Operations related to Payable API"
    }
  ],
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "parameters": {
    "authorization": {
      "name": "authorization",
      "in": "header",
      "description": "Application Token",
      "required": true,
      "type": "string"
    }
  },
  "paths": {
    "/v1/users": {
      "x-swagger-router-controller": "userController",
      "post": {
        "tags": ["Users"],
        "summary": "Free Authentication",
        "description": "Store user.",
        "operationId": "store",
        "produces": ["application/json"],
        "security": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Message in JSON format with the information needed to register a new user.",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["name", "email", "password"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "User Name",
                  "example": "John Johnson"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User email"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "minLength": 6,
                  "description": "User password"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "user id"
                },
                "name": {
                  "type": "string",
                  "description": "name"
                },
                "email": {
                  "type": "string",
                  "description": "email"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Need authentication",
        "description": "Update user.",
        "operationId": "update",
        "produces": ["application/json"],
        "security": [
          {
            "authorization": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Message in JSON format with the information needed to update a new user.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "User name",
                  "example": "John Johnson"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "minLength": 6,
                  "description": "User password"
                },
                "oldPassword": {
                  "type": "string",
                  "format": "password",
                  "minLength": 6,
                  "description": "User old password"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/login": {
      "x-swagger-router-controller": "sessionController",
      "post": {
        "tags": ["Auth"],
        "summary": "Free Authentication",
        "description": "Auth user.",
        "operationId": "store",
        "produces": ["application/json"],
        "security": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Message in JSON format with the information needed to get session of user.",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email", "password"],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User email"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "minLength": 6,
                  "description": "User password"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "user id"
                    },
                    "name": {
                      "type": "string",
                      "description": "user name"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "description": "user email"
                    }
                  }
                },
                "token": {
                  "type": "string",
                  "description": "token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/transactions": {
      "x-swagger-router-controller": "transactionController",
      "post": {
        "tags": ["Transactions"],
        "summary": "Need authentication",
        "description": "Transaction.",
        "operationId": "store",
        "produces": ["application/json"],
        "security": [
          {
            "authorization": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Message in JSON format with the information needed to get session of user.",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "description",
                "amount",
                "payment_method",
                "card_number",
                "card_name",
                "card_expiration_date",
                "card_cvv"
              ],
              "properties": {
                "description": {
                  "type": "string",
                  "description": "description",
                  "example": "Smartband XYZ 3.0"
                },
                "amount": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 100,
                  "maximum": 999999999999,
                  "description": "amount",
                  "example": 10000
                },
                "payment_method": {
                  "type": "string",
                  "enum": ["debit_card", "credit_card"],
                  "example": "credit_card",
                  "description": "payment method"
                },
                "card_number": {
                  "type": "string",
                  "pattern": "^\\d{16}$",
                  "example": "4111111111111111",
                  "description": "card number"
                },
                "card_name": {
                  "type": "string",
                  "description": "card name",
                  "example": "John Johnson"
                },
                "card_expiration_date": {
                  "type": "string",
                  "pattern": "^\\d{4}$",
                  "example": "1022",
                  "description": "card expiration date"
                },
                "card_cvv": {
                  "type": "string",
                  "pattern": "^\\d{3}$",
                  "example": "123",
                  "description": "card cvv"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TransactionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": ["Transactions"],
        "summary": "Need authentication",
        "description": "Transaction.",
        "operationId": "getTransactions",
        "produces": ["application/json"],
        "security": [
          {
            "authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Filter by id",
            "type": "integer",
            "minimum": 1,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Defines the limit of the returned list",
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "required": false,
            "default": 20
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Current number of the pagination",
            "type": "integer",
            "minimum": 0,
            "required": false,
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransactionResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/balance": {
      "x-swagger-router-controller": "payableController",
      "get": {
        "tags": ["Balance"],
        "summary": "Need authentication",
        "description": "Balance.",
        "operationId": "getBalance",
        "produces": ["application/json"],
        "security": [
          {
            "authorization": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "available": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "integer"
                    }
                  }
                },
                "waiting_funds": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/payable/{transaction_id}": {
      "x-swagger-router-controller": "payableController",
      "get": {
        "tags": ["Payable"],
        "summary": "Need authentication",
        "description": "Payable.",
        "operationId": "getPayable",
        "produces": ["application/json"],
        "security": [
          {
            "authorization": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "description": "Transaction's identifier",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "payment_status": {
                  "type": "string",
                  "example": "credit_card",
                  "description": "Payment Status"
                },
                "payment_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Payment Date"
                },
                "amount": {
                  "type": "integer",
                  "example": 10000,
                  "description": "Amount"
                },
                "fee": {
                  "type": "string",
                  "example": 100,
                  "description": "Fee"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/swagger": {
      "x-swagger-pipe": "swagger_raw"
    }
  },
  "securityDefinitions": {
    "authorization": {
      "type": "apiKey",
      "name": "authorization",
      "in": "header"
    }
  },
  "definitions": {
    "ErrorResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Error code"
          },
          "date": {
            "type": "string",
            "format": "date-item",
            "description": "Date and time of the error"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "details": {
            "type": "string",
            "description": "Details of the error"
          }
        }
      }
    },
    "TransactionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Id",
          "example": 1
        },
        "description": {
          "type": "string",
          "description": "Description",
          "example": "Smartband XYZ 3.0"
        },
        "amount": {
          "type": "integer",
          "description": "Amount",
          "example": 10000
        },
        "payment_method": {
          "type": "string",
          "description": "Payment Method",
          "example": "credit_card"
        },
        "card_last_number": {
          "type": "string",
          "description": "Card Lasts Numbers",
          "example": "1234"
        },
        "card_name": {
          "type": "string",
          "description": "card Name",
          "example": "John Johnson"
        },
        "card_expiration_date": {
          "type": "string",
          "description": "Card Expiration Date",
          "example": "1122"
        },
        "card_cvv": {
          "type": "string",
          "description": "Card CVV",
          "example": "123"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation Date"
        }
      }
    }
  }
}
